name: CI

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: 'Build and Push'
    runs-on: ubuntu-latest
    # strategy:
    #     matrix:
    #       node: [16,18,20]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
       
      # - name: Node.js | ${{ matrix.node }}
      - name: Node.js
        uses: actions/setup-node@v4
        with:
          # node-version: ${{ matrix.node }}
          node-version: 18
          cache: 'npm'
      - run: npm install
      - run: npm run test

      - name: Generate Tag
        id: generate_tag
        run: |
         SHA=$(echo $GITHUB_SHA | head -c7)
         echo "sha=$SHA" >> $GITHUB_OUTPUT

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::629500205300:role/ecr-role
          aws-region: us-east-1
      
      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # - name: Login to DockerHub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_TOKEN }}

      # - name: Build and Push Docker Image
      #   uses: docker/build-push-action@v5
      #   with:
      #     push: true
      #     tags: pedro4r/docker-ci-api:${{ steps.generate_tag.outputs.sha }}, pedro4r/docker-ci-api:latest

      - name: Build Docker Image
        id: build-docker-image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          TAG: ${{ steps.generate_tag.outputs.sha }}
        run: |
          docker build -t $REGISTRY/rocketseat-ci:$TAG .
          docker push $REGISTRY/rocketseat-ci:$TAG
          docker tag $REGISTRY/rocketseat-ci:$TAG $REGISTRY/rocketseat-ci:latest
          docker push $REGISTRY/rocketseat-ci:latest
          IMAGE=$(echo $REGISTRY/rocketseat-ci:$TAG)
          echo "image=$IMAGE" >> $GITHUB_OUTPUT
      
      - name: Deploy to app runner
        id: deploy-app-runner
        uses: awslabs/amazon-app-runner-deploy@main
        with:
          service: rocketseat-api
          image: ${{ steps.build-docker-image.outputs.image }}
          access-role-arn: arn:aws:iam::629500205300:role/app-runner-role
          region: us-east-1
          cpu: 1
          memory: 2
          port: 3000
          wait-for-service-stability-seconds: 180

      - name: App Runner URL
        run: echo "App Runner running... ${{ steps.deploy-app-runner.outputs.service-url }}"

      # - name: Build Docker Image
      #   run: docker build -t pedro4r/docker-ci-api:${{ steps.generate_tag.outputs.sha }} .

      # - name: Push image
      #   run: docker push pedro4r/docker-ci-api:${{ steps.generate_tag.outputs.sha }}